import { Component } from '@angular/core';
import { SomethingMissingService } from '../../services/something-missing.service'; // Import the service
import { Submission } from '../../models/submission.model'; // Import the model

@Component({
  selector: 'app-something-missing',
  templateUrl: './something-missing.component.html',
  styleUrls: ['./something-missing.component.css']
})
export class SomethingMissingComponent {
  logoImage = '../../../assets/Images/logo.png';
  backgroundImage = '../../../assets/manif-soutien-palestine-scaled.jpg';
  selectedOption = 'Boycott'; // Default option
  isSubmitted = false; // Track if form is submitted
  urlError = ''; // URL error message
  // Form data initialized as empty fields
  formData: Submission = {
    brandName: '',
    proofURL: '',
    reason: '',
    alternativeBrand: '',
    submissionType: '',
    _id: ''
  };

  constructor(private somethingMissingService: SomethingMissingService) {}

  // Function to handle form submission
  onSubmit() {
    // Ensure that the proofURL is valid and the required fields are filled
    if (this.validateURL(this.formData.proofURL) && this.formData.reason) {
      this.formData.submissionType = this.selectedOption === 'Boycott' ? 'BOYCOTT' : 'ALTERNATIVE';
      
      // Remove _id field before sending the data, it will be auto-generated by MongoDB
      delete this.formData._id;
  
      this.isSubmitted = true;
      this.urlError = '';  // Clear previous error
  
      // Send data to the service
      this.somethingMissingService.submitSubmission(this.formData).subscribe(
        (response) => {
          console.log('Form submitted successfully:', response);
          window.location.reload();
        },
        (error) => {
          console.error('There was an error!', error);
        }
      );
    } else {
      this.urlError = 'Please enter a valid URL and reason.';
    }
  }
  
  
  // Validate URL format using regex
  validateURL(url: string): boolean {
    const pattern = new RegExp('^(https?:\\/\\/)?'+
      '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.?)+[a-z]{2,}|'+
      '((\\d{1,3}\\.){3}\\d{1,3}))'+
      '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'+
      '(\\?[;&a-z\\d%_.~+=-]*)?'+
      '(\\#[-a-z\\d_]*)?$','i');
    return !!pattern.test(url);
  }

  // Function to close thank-you modal after successful submission
  closeModal() {
    this.isSubmitted = false;
  }
}
